Criando uma função

FUNÇÃO SEM PARAMETROS

def linha():
    print('-'*40)   => cria uma linha sempre que eu digitar a funçao ( linha())

********************************************************************************
FUNÇÃO COM PARAMETROS

def  => cria comandos personalizados

* def mensagem(msg):  cria um def onde posso alterar a msg.
    print("-"*40)
    print(msg)
    print('-'*40)
mensagem('Everton Dutra')

     MOSTRA

----------------------------------------
Everton Dutra
----------------------------------------

*******************************************************************************
criando uma def de soma

def soma(a,b):
    s = a + b
    print(s)

# Programa principal
soma(4,5)
soma(8, 9)
soma(2, 1)

**********************************************************************************

CRIANDO UMA SOMA COM VÁRIOS VALORES

def soma (* valores):
    s = 0
    for num in valores:
        s += num
    print(f'Somando os núneros {valores} temos {s}')


soma(5, 2)
soma(2, 9, 4)

Somando os núneros (5, 2) temos 7
Somando os núneros (2, 9, 4) temos 15

************************************************************************************

CRIANDO UM CONTADOR

def contador(*num):
    print(num)


contador(2, 1, 7)
contador(8, 0)
contador(4, 4, 7, 6, 2)

(2, 1, 7)
(8, 0)
(4, 4, 7, 6, 2)

************************************************************************************

CRIANDO UMA DOBRA

def dobra(lst):
    pos = 0
    while pos < len(lst):
        lst[pos] *= 2
        pos += 1


valores = [6, 3, 9, 1, 0, 2]
print(valores)
dobra(valores)
print(valores)

[6, 3, 9, 1, 0, 2]
[12, 6, 18, 2, 0, 4]

*************************************************************************************
   INTERACTIVE
      HELP

help(print)  => mostra a funcionalidade (manual) do print



***   DOCSTRINGS

É criar um manual para uma def criada.

***   PARÂMETROS OPCIONAIS
def somar(a=0, b=0, c=0): quando coloca um valor para o indíce. (a=0)
    s = a + b + c
    print(f'A soma vale {s})

***   ESCOPO DE VARIÁVEIS
 É o local onde a variável vai existir e onde vai deixar de existir

 ESCOPO LOCAL é quando uma variável é criada dentro de uma def por exemplo
 ESCOPO GLOBAL é quando a variável é criada dentro do programa principal

 ***   RETORNANDO VALORES  ( RETURN )

função para ler um número inteiro
def leiaint(msg):
    ok = False
    valor = 0
    while True:
        n = input(msg)
        if n.isnumeric():
            valor = int(n)
            ok = True
        else:
            print('\033[31mERRO! Digite um número válido.\033[m')
        if ok:
            break
    return valor

